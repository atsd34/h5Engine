function smoke(i,t){addPrefab("smoke.prefab",{position:{x:i,y:t}})}gm.Golem=function(){this.vx=50},gm.Golem.prototype.create=function(){this.vx=40+40*Math.random(),this.gameObject.Physics.onCollision={main:function(i,t){"run"==t.sprite.currentAnim.name&&Math.abs(t.position.x-i.position.x)<10&&i.life&&i.life.remaining>0&&i.life.invulnerable<=0&&(i.life.remaining-=2,t.life.remaining=0,smoke(t.position.x+8,t.position.y),smoke(t.position.x-8,t.position.y),smoke(t.position.x,t.position.y-8),smoke(t.position.x,t.position.y+8))}}},gm.Golem.prototype.update=function(i){var t=this,e=this.gameObject.position;this.gameObject;if(!monsterActivation(this)){if(this.gameObject.life.remaining<=0&&"die"!=this.gameObject.sprite.currentAnim.name){try{for(var s=childrenGameObject[this.gameObject.name.value],o=0;o<s.length;o++)try{objects[s[o]].remove()}catch(i){}}catch(i){}this.gameObject.sprite.playOnceAnim("die",function(){t.gameObject.remove()})}if("die"==this.gameObject.sprite.currentAnim.name)return void(this.gameObject.Physics.vx=0);var c=objects.main.position;this.gameObject.position.scaleX=Math.sign(this.gameObject.Physics.vx);var n=Math.sqrt((e.x-c.x)*(e.x-c.x)+(e.y-c.y)*(e.y-c.y));n<150&&objects.main.Physics.grounded&&("run"==this.gameObject.sprite.currentAnim.name||n>80)?("run"!=this.gameObject.sprite.currentAnim.name&&(this.gameObject.sprite.loopAnim("run"),this.gameObject.Physics.vx=3*Math.sign(c.x-e.x)*this.vx),n>80&&(this.gameObject.Physics.vx=3*Math.sign(c.x-e.x)*this.vx)):("walk"!=this.gameObject.sprite.currentAnim.name&&(this.gameObject.sprite.loopAnim("walk"),this.gameObject.Physics.vx=Math.sign(this.gameObject.Physics.vx)*this.vx),n<150?this.gameObject.Physics.vx=-1*Math.sign(c.x-e.x)*this.vx:0==this.gameObject.Physics.vx?this.gameObject.Physics.vx=1*this.vx:this.gameObject.Physics.checkWalls(this.gameObject.position.x+16*this.gameObject.position.scaleX,this.gameObject.position.y+16)&&this.gameObject.position.x+16*this.gameObject.position.scaleX>objects.Director.Director.left&&this.gameObject.position.x+16*this.gameObject.position.scaleX<objects.Director.Director.right||(this.gameObject.position.x>objects.Director.Director.left||this.gameObject.position.x<objects.Director.Director.right?this.gameObject.Physics.vx=Math.sign(c.x-e.x)*this.vx:this.gameObject.Physics.vx=-1*Math.sign(this.gameObject.Physics.vx)*this.vx))}},gm.Golem.prototype.dispose=function(){};